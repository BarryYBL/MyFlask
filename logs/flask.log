#coding=utf-8
INFO log.py:110 SELECT job.id AS job_id, job.name AS job_name, job.testcases AS job_testcases, job.testcase_scenes AS job_testcase_scenes, job.description AS job_description, job.timestamp AS job_timestamp, job.user_id AS job_user_id, job.triggers AS job_triggers, job.cron AS job_cron, job.is_start AS job_is_start, job.mail_id AS job_mail_id 
FROM job 
WHERE job.is_start = %(is_start_1)s
INFO log.py:110 {'is_start_1': 1}
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.id = %(param_1)s
INFO log.py:110 {'param_1': '4'}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE false = 1
INFO log.py:110 {}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers
INFO log.py:110 {}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:34] "GET /casegroupsearchcase/4/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:34] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:34] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:34] "GET /frontlogs/ HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.name LIKE %(name_1)s AND case_group.user_id = %(user_id_1)s ORDER BY case_group.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 0, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.name LIKE %(name_1)s AND case_group.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:37] "GET /casegrouplist/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:37] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:37] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:37] "GET /frontlogs/ HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.id = %(param_1)s
INFO log.py:110 {'param_1': '4'}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE false = 1
INFO log.py:110 {}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers
INFO log.py:110 {}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:39] "GET /casegroupsearchcase/4/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:39] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:39] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:39] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:40] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:40] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:40] "GET /frontlogs/ HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.id = %(param_1)s
INFO log.py:110 {'param_1': '3'}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE false = 1
INFO log.py:110 {}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers
INFO log.py:110 {}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:41] "GET /casegroupsearchcase/3/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:41] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:41] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:41] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:48] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:48] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:48] "GET /frontlogs/ HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.id = %(param_1)s
INFO log.py:110 {'param_1': '11'}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE false = 1
INFO log.py:110 {}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers
INFO log.py:110 {}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:49] "GET /casegroupsearchcase/11/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:49] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:49] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:49] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:50] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:50] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:50] "GET /frontlogs/ HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.name LIKE %(name_1)s AND case_group.user_id = %(user_id_1)s ORDER BY case_group.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 0, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.name LIKE %(name_1)s AND case_group.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:50] "GET /casegrouplist/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:50] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:50] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:50] "GET /static/img/log.png HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT testcase_scenes.id AS testcase_scenes_id, testcase_scenes.name AS testcase_scenes_name, testcase_scenes.description AS testcase_scenes_description, testcase_scenes.group_id AS testcase_scenes_group_id, testcase_scenes.timestamp AS testcase_scenes_timestamp, testcase_scenes.is_model AS testcase_scenes_is_model, testcase_scenes.user_id AS testcase_scenes_user_id 
FROM testcase_scenes 
WHERE testcase_scenes.is_model = %(is_model_1)s AND testcase_scenes.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.is_model = %(is_model_1)s AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcase_scenes.id AS testcase_scenes_id, testcase_scenes.name AS testcase_scenes_name, testcase_scenes.description AS testcase_scenes_description, testcase_scenes.group_id AS testcase_scenes_group_id, testcase_scenes.timestamp AS testcase_scenes_timestamp, testcase_scenes.is_model AS testcase_scenes_is_model, testcase_scenes.user_id AS testcase_scenes_user_id 
FROM testcase_scenes 
WHERE testcase_scenes.name LIKE %(name_1)s AND testcase_scenes.user_id = %(user_id_1)s ORDER BY testcase_scenes.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 0, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT testcase_scenes.id AS testcase_scenes_id, testcase_scenes.name AS testcase_scenes_name, testcase_scenes.description AS testcase_scenes_description, testcase_scenes.group_id AS testcase_scenes_group_id, testcase_scenes.timestamp AS testcase_scenes_timestamp, testcase_scenes.is_model AS testcase_scenes_is_model, testcase_scenes.user_id AS testcase_scenes_user_id 
FROM testcase_scenes 
WHERE testcase_scenes.name LIKE %(name_1)s AND testcase_scenes.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:51] "GET /testcase_scene_testcase_list/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:52] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:52] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:52] "GET /static/img/log.png HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.is_model = %(is_model_1)s AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'user_id_1': 1}
INFO log.py:110 UPDATE testcases SET data=%(data)s WHERE testcases.id = %(testcases_id)s
INFO log.py:110 ({'data': '{"username":"admin","password":"admin1","captchaID":"","captchaText":"xN5d"}', 'testcases_id': 1}, {'data': '{"name":"Xo35ET"}', 'testcases_id': 30}, {'data': '{\r\n"username":"RDmcAX",\r\n"password":"yanglei1",\r\n"name":"",\r\n"mail":"1@q.com",\r\n"phone":"",\r\n"enable":true\r\n}', 'testcases_id': 33}, {'data': '{\r\n"cellName":"cell50",\r\n"cellType":"COMPUTE",\r\n"description":"string",\r\n"ip":"${ZDBM_IP}",\r\n"port":22,\r\n"username":"root",\r\n"password":"root1234"\r\n}', 'testcases_id': 105})
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers 
WHERE %(param_1)s = request_headers.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s ORDER BY testcases.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 0, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:52] "GET /testcaselist/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:52] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:52] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:39:52] "GET /static/img/log.png HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.is_model = %(is_model_1)s AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'user_id_1': 1}
INFO log.py:110 UPDATE testcases SET data=%(data)s WHERE testcases.id = %(testcases_id)s
INFO log.py:110 ({'data': '{"username":"admin","password":"admin1","captchaID":"","captchaText":"JtUJ"}', 'testcases_id': 1}, {'data': '{"name":"mIUvwm"}', 'testcases_id': 30}, {'data': '{\r\n"username":"ff8c40",\r\n"password":"yanglei1",\r\n"name":"",\r\n"mail":"1@q.com",\r\n"phone":"",\r\n"enable":true\r\n}', 'testcases_id': 33}, {'data': '{\r\n"cellName":"cell50",\r\n"cellType":"COMPUTE",\r\n"description":"string",\r\n"ip":"${ZDBM_IP}",\r\n"port":22,\r\n"username":"root",\r\n"password":"root1234"\r\n}', 'testcases_id': 105})
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers 
WHERE %(param_1)s = request_headers.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s ORDER BY testcases.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 12, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:04] "GET /testcaselist/?page=3 HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:04] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:04] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:04] "GET /static/img/log.png HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.is_model = %(is_model_1)s AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'user_id_1': 1}
INFO log.py:110 UPDATE testcases SET data=%(data)s WHERE testcases.id = %(testcases_id)s
INFO log.py:110 ({'data': '{"username":"admin","password":"admin1","captchaID":"","captchaText":"RcnF"}', 'testcases_id': 1}, {'data': '{"name":"Vp8RAw"}', 'testcases_id': 30}, {'data': '{\r\n"username":"Qu0MXn",\r\n"password":"yanglei1",\r\n"name":"",\r\n"mail":"1@q.com",\r\n"phone":"",\r\n"enable":true\r\n}', 'testcases_id': 33}, {'data': '{\r\n"cellName":"cell50",\r\n"cellType":"COMPUTE",\r\n"description":"string",\r\n"ip":"${ZDBM_IP}",\r\n"port":22,\r\n"username":"root",\r\n"password":"root1234"\r\n}', 'testcases_id': 105})
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers 
WHERE %(param_1)s = request_headers.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s ORDER BY testcases.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 6, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:06] "GET /testcaselist/?page=2 HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:06] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:06] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:06] "GET /static/img/log.png HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.is_model = %(is_model_1)s AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'user_id_1': 1}
INFO log.py:110 UPDATE testcases SET data=%(data)s WHERE testcases.id = %(testcases_id)s
INFO log.py:110 ({'data': '{"username":"admin","password":"admin1","captchaID":"","captchaText":"w4NV"}', 'testcases_id': 1}, {'data': '{"name":"m7mUvQ"}', 'testcases_id': 30}, {'data': '{\r\n"username":"IR7TN4",\r\n"password":"yanglei1",\r\n"name":"",\r\n"mail":"1@q.com",\r\n"phone":"",\r\n"enable":true\r\n}', 'testcases_id': 33}, {'data': '{\r\n"cellName":"cell50",\r\n"cellType":"COMPUTE",\r\n"description":"string",\r\n"ip":"${ZDBM_IP}",\r\n"port":22,\r\n"username":"root",\r\n"password":"root1234"\r\n}', 'testcases_id': 105})
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers 
WHERE %(param_1)s = request_headers.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s ORDER BY testcases.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 0, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:07] "GET /testcaselist/?page=1 HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:07] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:07] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:07] "GET /static/img/log.png HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.is_model = %(is_model_1)s AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'user_id_1': 1}
INFO log.py:110 UPDATE testcases SET data=%(data)s WHERE testcases.id = %(testcases_id)s
INFO log.py:110 ({'data': '{"username":"admin","password":"admin1","captchaID":"","captchaText":"WPEL"}', 'testcases_id': 1}, {'data': '{"name":"Q6YIhj"}', 'testcases_id': 30}, {'data': '{\r\n"username":"wPRDvp",\r\n"password":"yanglei1",\r\n"name":"",\r\n"mail":"1@q.com",\r\n"phone":"",\r\n"enable":true\r\n}', 'testcases_id': 33}, {'data': '{\r\n"cellName":"cell50",\r\n"cellType":"COMPUTE",\r\n"description":"string",\r\n"ip":"${ZDBM_IP}",\r\n"port":22,\r\n"username":"root",\r\n"password":"root1234"\r\n}', 'testcases_id': 105})
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers 
WHERE %(param_1)s = request_headers.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s ORDER BY testcases.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 12, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:09] "GET /testcaselist/?page=3 HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:09] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:09] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:09] "GET /frontlogs/ HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.is_model = %(is_model_1)s AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'user_id_1': 1}
INFO log.py:110 UPDATE testcases SET data=%(data)s WHERE testcases.id = %(testcases_id)s
INFO log.py:110 ({'data': '{"username":"admin","password":"admin1","captchaID":"","captchaText":"HaVg"}', 'testcases_id': 1}, {'data': '{"name":"UmKzbE"}', 'testcases_id': 30}, {'data': '{\r\n"username":"lnb8oI",\r\n"password":"yanglei1",\r\n"name":"",\r\n"mail":"1@q.com",\r\n"phone":"",\r\n"enable":true\r\n}', 'testcases_id': 33}, {'data': '{\r\n"cellName":"cell50",\r\n"cellType":"COMPUTE",\r\n"description":"string",\r\n"ip":"${ZDBM_IP}",\r\n"port":22,\r\n"username":"root",\r\n"password":"root1234"\r\n}', 'testcases_id': 105})
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers 
WHERE %(param_1)s = request_headers.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s ORDER BY testcases.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 6, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:10] "GET /testcaselist/?page=2 HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:10] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:10] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:10] "GET /frontlogs/ HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.is_model = %(is_model_1)s AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'user_id_1': 1}
INFO log.py:110 UPDATE testcases SET data=%(data)s WHERE testcases.id = %(testcases_id)s
INFO log.py:110 ({'data': '{"username":"admin","password":"admin1","captchaID":"","captchaText":"unYS"}', 'testcases_id': 1}, {'data': '{"name":"M5D8Jo"}', 'testcases_id': 30}, {'data': '{\r\n"username":"hXYIoB",\r\n"password":"yanglei1",\r\n"name":"",\r\n"mail":"1@q.com",\r\n"phone":"",\r\n"enable":true\r\n}', 'testcases_id': 33}, {'data': '{\r\n"cellName":"cell50",\r\n"cellType":"COMPUTE",\r\n"description":"string",\r\n"ip":"${ZDBM_IP}",\r\n"port":22,\r\n"username":"root",\r\n"password":"root1234"\r\n}', 'testcases_id': 105})
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers 
WHERE %(param_1)s = request_headers.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s ORDER BY testcases.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 0, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:11] "GET /testcaselist/?page=1 HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:11] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:11] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:11] "GET /static/img/log.png HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.is_model = %(is_model_1)s AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'user_id_1': 1}
INFO log.py:110 UPDATE testcases SET data=%(data)s WHERE testcases.id = %(testcases_id)s
INFO log.py:110 ({'data': '{"username":"admin","password":"admin1","captchaID":"","captchaText":"ks9G"}', 'testcases_id': 1}, {'data': '{"name":"mSun1C"}', 'testcases_id': 30}, {'data': '{\r\n"username":"C4bYQK",\r\n"password":"yanglei1",\r\n"name":"",\r\n"mail":"1@q.com",\r\n"phone":"",\r\n"enable":true\r\n}', 'testcases_id': 33}, {'data': '{\r\n"cellName":"cell50",\r\n"cellType":"COMPUTE",\r\n"description":"string",\r\n"ip":"${ZDBM_IP}",\r\n"port":22,\r\n"username":"root",\r\n"password":"root1234"\r\n}', 'testcases_id': 105})
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers 
WHERE %(param_1)s = request_headers.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s ORDER BY testcases.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 0, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.name LIKE %(name_1)s AND testcases.testcase_scene_id IS NULL AND testcases.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:33] "GET /testcaselist/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:33] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:33] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:33] "GET /static/img/log.png HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT testcase_scenes.id AS testcase_scenes_id, testcase_scenes.name AS testcase_scenes_name, testcase_scenes.description AS testcase_scenes_description, testcase_scenes.group_id AS testcase_scenes_group_id, testcase_scenes.timestamp AS testcase_scenes_timestamp, testcase_scenes.is_model AS testcase_scenes_is_model, testcase_scenes.user_id AS testcase_scenes_user_id 
FROM testcase_scenes 
WHERE testcase_scenes.is_model = %(is_model_1)s AND testcase_scenes.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE testcases.is_model = %(is_model_1)s AND testcases.user_id = %(user_id_1)s
INFO log.py:110 {'is_model_1': 1, 'user_id_1': 1}
INFO log.py:110 SELECT testcase_scenes.id AS testcase_scenes_id, testcase_scenes.name AS testcase_scenes_name, testcase_scenes.description AS testcase_scenes_description, testcase_scenes.group_id AS testcase_scenes_group_id, testcase_scenes.timestamp AS testcase_scenes_timestamp, testcase_scenes.is_model AS testcase_scenes_is_model, testcase_scenes.user_id AS testcase_scenes_user_id 
FROM testcase_scenes 
WHERE testcase_scenes.name LIKE %(name_1)s AND testcase_scenes.user_id = %(user_id_1)s ORDER BY testcase_scenes.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 0, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT testcase_scenes.id AS testcase_scenes_id, testcase_scenes.name AS testcase_scenes_name, testcase_scenes.description AS testcase_scenes_description, testcase_scenes.group_id AS testcase_scenes_group_id, testcase_scenes.timestamp AS testcase_scenes_timestamp, testcase_scenes.is_model AS testcase_scenes_is_model, testcase_scenes.user_id AS testcase_scenes_user_id 
FROM testcase_scenes 
WHERE testcase_scenes.name LIKE %(name_1)s AND testcase_scenes.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:37] "GET /testcase_scene_testcase_list/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:37] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:37] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:37] "GET /frontlogs/ HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.name LIKE %(name_1)s AND case_group.user_id = %(user_id_1)s ORDER BY case_group.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 0, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.name LIKE %(name_1)s AND case_group.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:38] "GET /casegrouplist/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:38] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:38] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:38] "GET /static/img/log.png HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password, users.timestamp AS users_timestamp 
FROM users 
WHERE users.id = %(param_1)s
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE %(param_1)s = case_group.user_id
INFO log.py:110 {'param_1': 1}
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.name LIKE %(name_1)s AND case_group.user_id = %(user_id_1)s ORDER BY case_group.timestamp DESC 
 LIMIT %(param_1)s, %(param_2)s
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1, 'param_1': 6, 'param_2': 6}
INFO log.py:110 SELECT count(*) AS count_1 
FROM (SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.name LIKE %(name_1)s AND case_group.user_id = %(user_id_1)s) AS anon_1
INFO log.py:110 {'name_1': '%%', 'user_id_1': 1}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:40] "GET /casegrouplist/?page=2 HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:40] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:40] "GET /frontlogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:40] "GET /static/img/log.png HTTP/1.1" 200 -
INFO log.py:110 BEGIN (implicit)
INFO log.py:110 SELECT case_group.id AS case_group_id, case_group.name AS case_group_name, case_group.description AS case_group_description, case_group.timestamp AS case_group_timestamp, case_group.user_id AS case_group_user_id 
FROM case_group 
WHERE case_group.id = %(param_1)s
INFO log.py:110 {'param_1': '1'}
INFO log.py:110 SELECT testcases.id AS testcases_id, testcases.name AS testcases_name, testcases.url AS testcases_url, testcases.data AS testcases_data, testcases.regist_variable AS testcases_regist_variable, testcases.regular AS testcases_regular, testcases.method AS testcases_method, testcases.group_id AS testcases_group_id, testcases.request_headers_id AS testcases_request_headers_id, testcases.testcase_scene_id AS testcases_testcase_scene_id, testcases.hope_result AS testcases_hope_result, testcases.is_model AS testcases_is_model, testcases.timestamp AS testcases_timestamp, testcases.user_id AS testcases_user_id, testcases.old_sql AS testcases_old_sql, testcases.new_sql AS testcases_new_sql, testcases.old_sql_regist_variable AS testcases_old_sql_regist_variable, testcases.new_sql_regist_variable AS testcases_new_sql_regist_variable, testcases.old_sql_hope_result AS testcases_old_sql_hope_result, testcases.new_sql_hope_result AS testcases_new_sql_hope_result, testcases.old_sql_id AS testcases_old_sql_id, testcases.new_sql_id AS testcases_new_sql_id 
FROM testcases 
WHERE false = 1
INFO log.py:110 {}
INFO log.py:110 SELECT request_headers.id AS request_headers_id, request_headers.name AS request_headers_name, request_headers.value AS request_headers_value, request_headers.description AS request_headers_description, request_headers.user_id AS request_headers_user_id, request_headers.timestamp AS request_headers_timestamp 
FROM request_headers
INFO log.py:110 {}
INFO log.py:110 ROLLBACK
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:41] "GET /casegroupsearchcase/1/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:41] "GET /flasklogs/ HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:41] "GET /static/img/log.png HTTP/1.1" 200 -
INFO _internal.py:122 127.0.0.1 - - [02/Sep/2019 22:40:41] "GET /frontlogs/ HTTP/1.1" 200 -
